<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1110.1623                               -->
<workbook source-build='2020.3.3 (20203.20.1110.1623)' source-platform='win' version='18.1' xml:base='https://dub01.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='MichaelTurner_Lab10' path='/t/data301dashboards/workbooks' revision='1.0' site='data301dashboards' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Processed_EV_Data' inline='true' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Processed_EV_Data' name='textscan.1f1ktgj1m2p4bf108aogr0jgbkic'>
            <connection class='textscan' directory='D:/Documents/my_courses/data301/course-project-group_6016/Data/processed' filename='Processed_EV_Data.csv' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1f1ktgj1m2p4bf108aogr0jgbkic' name='Processed_EV_Data.csv' table='[Processed_EV_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='VIN' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='ZIP' ordinal='4' />
            <column datatype='integer' name='Model_Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='EV_Type' ordinal='8' />
            <column datatype='integer' name='Range' ordinal='9' />
            <column datatype='integer' name='MSRP' ordinal='10' />
            <column datatype='string' name='Location' ordinal='11' />
            <column datatype='real' name='Latitude' ordinal='12' />
            <column datatype='real' name='Longitude' ordinal='13' />
            <column datatype='string' name='North_South' ordinal='14' />
            <column datatype='string' name='West_East' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1f1ktgj1m2p4bf108aogr0jgbkic' name='Processed_EV_Data.csv' table='[Processed_EV_Data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='VIN' ordinal='1' />
            <column datatype='string' name='County' ordinal='2' />
            <column datatype='string' name='City' ordinal='3' />
            <column datatype='integer' name='ZIP' ordinal='4' />
            <column datatype='integer' name='Model_Year' ordinal='5' />
            <column datatype='string' name='Make' ordinal='6' />
            <column datatype='string' name='Model' ordinal='7' />
            <column datatype='string' name='EV_Type' ordinal='8' />
            <column datatype='integer' name='Range' ordinal='9' />
            <column datatype='integer' name='MSRP' ordinal='10' />
            <column datatype='string' name='Location' ordinal='11' />
            <column datatype='real' name='Latitude' ordinal='12' />
            <column datatype='real' name='Longitude' ordinal='13' />
            <column datatype='string' name='North_South' ordinal='14' />
            <column datatype='string' name='West_East' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_CA&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>VIN</remote-name>
            <remote-type>129</remote-type>
            <local-name>[VIN]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>VIN</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>County</remote-name>
            <remote-type>129</remote-type>
            <local-name>[County]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>County</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ZIP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ZIP]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>ZIP</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model_Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Model_Year]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Model_Year</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Make</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Make]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Make</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Model</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Model]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Model</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EV_Type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[EV_Type]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>EV_Type</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Range</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Range]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Range</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MSRP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[MSRP]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>MSRP</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>North_South</remote-name>
            <remote-type>129</remote-type>
            <local-name>[North_South]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>North_South</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>West_East</remote-name>
            <remote-type>129</remote-type>
            <local-name>[West_East]</local-name>
            <parent-name>[Processed_EV_Data.csv]</parent-name>
            <remote-alias>West_East</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[County]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='EV Type' datatype='string' name='[EV_Type]' role='dimension' type='nominal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Msrp' datatype='integer' name='[MSRP]' role='measure' type='quantitative' />
      <column datatype='string' name='[Make]' role='dimension' type='nominal' />
      <column caption='Model Year' datatype='integer' name='[Model_Year]' role='dimension' type='quantitative' />
      <column caption='North South' datatype='string' name='[North_South]' role='dimension' type='nominal' />
      <column caption='West East' datatype='string' name='[West_East]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[ZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <_.fcp.ObjectModelTableType.true...column caption='Processed_EV_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Latitude,Longitude)' hidden='true' name='[Action (Latitude,Longitude)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:ok]' />
          <groupfilter function='level-members' level='[none:Longitude:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Make)' hidden='true' name='[Action (Make)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Make]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Latitude:qk]' />
          <groupfilter function='level-members' level='[none:Longitude:qk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='D:/Documents/my_courses/data301/course-project-group_6016/Analysis/Michael/MichaelTurner_Lab10.twb Files/Data/Extracts/federated_0v1oxw70uzidgy1b0s81o1.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='12/01/2020 07:18:20 PM' username=''>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Processed_EV_Data' increment-value='%null%' refresh-type='create' rows-inserted='60925' timestamp-start='2020-12-01 19:18:20.161' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>60925</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>VIN</remote-name>
              <remote-type>129</remote-type>
              <local-name>[VIN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>VIN</remote-alias>
              <ordinal>1</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4079</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>County</remote-name>
              <remote-type>129</remote-type>
              <local-name>[County]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>County</remote-alias>
              <ordinal>2</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>72</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>3</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>507</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ZIP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[ZIP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ZIP</remote-alias>
              <ordinal>4</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model_Year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Model_Year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model_Year</remote-alias>
              <ordinal>5</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Make</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Make]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Make</remote-alias>
              <ordinal>6</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>33</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Model</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Model]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Model</remote-alias>
              <ordinal>7</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>149</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>EV_Type</remote-name>
              <remote-type>129</remote-type>
              <local-name>[EV_Type]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>EV_Type</remote-alias>
              <ordinal>8</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Range</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Range]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Range</remote-alias>
              <ordinal>9</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>119</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>MSRP</remote-name>
              <remote-type>20</remote-type>
              <local-name>[MSRP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>MSRP</remote-alias>
              <ordinal>10</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>248</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>11</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Latitude</remote-alias>
              <ordinal>12</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>693</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longitude</remote-alias>
              <ordinal>13</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>692</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>North_South</remote-name>
              <remote-type>129</remote-type>
              <local-name>[North_South]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>North_South</remote-alias>
              <ordinal>14</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>West_East</remote-name>
              <remote-type>129</remote-type>
              <local-name>[West_East]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>West_East</remote-alias>
              <ordinal>15</ordinal>
              <family>Processed_EV_Data.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Processed_EV_Data.csv' id='Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363'>
            <properties context=''>
              <relation connection='textscan.1f1ktgj1m2p4bf108aogr0jgbkic' name='Processed_EV_Data.csv' table='[Processed_EV_Data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_CA' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='VIN' ordinal='1' />
                  <column datatype='string' name='County' ordinal='2' />
                  <column datatype='string' name='City' ordinal='3' />
                  <column datatype='integer' name='ZIP' ordinal='4' />
                  <column datatype='integer' name='Model_Year' ordinal='5' />
                  <column datatype='string' name='Make' ordinal='6' />
                  <column datatype='string' name='Model' ordinal='7' />
                  <column datatype='string' name='EV_Type' ordinal='8' />
                  <column datatype='integer' name='Range' ordinal='9' />
                  <column datatype='integer' name='MSRP' ordinal='10' />
                  <column datatype='string' name='Location' ordinal='11' />
                  <column datatype='real' name='Latitude' ordinal='12' />
                  <column datatype='real' name='Longitude' ordinal='13' />
                  <column datatype='string' name='North_South' ordinal='14' />
                  <column datatype='string' name='West_East' ordinal='15' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Washington EV Dashboard' type='sheet' worksheet='Non-Densely Populated EVs' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Washington EV Dashboard' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Washington EV Dashboard' type='sheet' worksheet='Make of EVs in Non-Densely Populated Area' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Washington EV Dashboard' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Washington EV Dashboard' type='sheet' worksheet='Make of EVs in Densely Populated Area' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Washington EV Dashboard' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Washington EV Dashboard' type='sheet' worksheet='Densely Populated EVs' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Washington EV Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Count of EVs'>
      <repository-location id='CountofEVs' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Processed_EV_Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Processed_EV_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' direction='DESC' using='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' />
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' scope='cols' value='Count of EVs' />
            <format attr='height' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' value='44' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' value='100' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]</cols>
      </table>
      <simple-id uuid='{EBFB9A73-1433-4392-96C8-679866B763F7}' />
    </worksheet>
    <worksheet name='Densely Populated EVs'>
      <repository-location id='DenselyPopulatedEVs' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' included-values='in-range-or-null'>
            <min>46.960000000000001</min>
            <max>48.990000000000002</max>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' included-values='in-range-or-null'>
            <min>-124.63522600000002</min>
            <max>-120.03</max>
          </filter>
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.51999998092651367' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{FC28DC40-F4FF-401D-8855-F453BA3E9218}' />
    </worksheet>
    <worksheet name='Distribution of EVs'>
      <repository-location id='DistributionofEVs' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' included-values='in-range-or-null'>
            <min>45.600000000000001</min>
            <max>48.990000000000002</max>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' included-values='all' />
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.51999998092651367' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{1E533969-EEC3-4722-B90A-28863DB2B3E5}' />
    </worksheet>
    <worksheet name='Make of EVs in Densely Populated Area'>
      <repository-location id='MakeofEVsinDenselyPopulatedArea' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Processed_EV_Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Processed_EV_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' included-values='all' />
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' included-values='all' />
          <computed-sort column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' direction='DESC' using='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' />
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' scope='cols' value='Count of EVs' />
            <format attr='height' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' value='42' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' value='68' />
            <format attr='height-header' value='33' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]</cols>
      </table>
      <simple-id uuid='{0A83490B-BD72-4526-8BEC-E3F8815A324E}' />
    </worksheet>
    <worksheet name='Make of EVs in Non-Densely Populated Area'>
      <repository-location id='MakeofEVsinNon-DenselyPopulatedArea' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Processed_EV_Data.csv' datatype='integer' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Processed_EV_Data.csv' datatype='table' name='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Make]' derivation='None' name='[none:Make:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]' filter-group='4'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.63522600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.908133999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.57241500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.300711999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.27164899999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.920242000000009' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.251122' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.060315000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.21924700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.379879000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.17945800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.195433000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.15735499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.981777999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.14524' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.231673999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11957' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.089627999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11782599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.141807' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11010899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.883808000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.03407300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.439725000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.93950600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.067836' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.913191' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.321567000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.818061' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.986116000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.75384000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.096412999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.63846800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.32837' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.629486' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.860145000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.39631900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.038877999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.362968' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.075893999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.273642' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.048547999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.26252000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.857638999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.191985' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.438977000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.12715800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.548831' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.09921000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.225326000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.09286299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.056266999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.08430199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.544105999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.071989' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.334356' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.07174000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.701591000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.05652000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.989691999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.02094099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.967550000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.01417800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.436584000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.99919299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.620536000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.97996899999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.078240999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.97692499999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.069898999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.975404' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.712141000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.92939500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.583607999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.92494600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.657249' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.924277' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.318356999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.90082700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.035533999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.896991' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.501027999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88949100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.595272999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88848400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.435375999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88817100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.589426000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.87404199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.998873000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.86836' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.085951000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.84982400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.828575000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.84676700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.367328000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.81801600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.080229000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.80363200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.641308000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.80237' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.024990000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.785612' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.980589999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.78187600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.089772000000004' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.77752599999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.325980000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.774081' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.267339' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.770534' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.202463999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.757743' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.029989' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.75117900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.002091999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.75' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.990000000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.727446' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.951762000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.72468200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.572710000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.71889299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.376283000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.714415' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.718487000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.706401' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.056010999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.70405600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.664240000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.69921200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.161124000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.69441' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.905057999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.680274' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.710887' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.67017000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.874730999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.668232' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.337215' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.66309299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.194533999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.65890100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.466777999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.65395300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.094653000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63841000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.310313000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63609099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.568769000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63579400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.630602000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63339300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.748427' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62841800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.487079000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.627315' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.944130999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62465400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.246271' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62320800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.590898000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.622766' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.699896000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.61515199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.863295000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.612932' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.300296000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.59945399999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.365819999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.596722' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.168908000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.59096099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.532192999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.58472900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.082881999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.57556899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.084890000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.57330399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.429299999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.569135' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.908810000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.56117100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.734394999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.558621' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.888348999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.55645' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.162343999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.539078' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.019041000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.537695' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.205342999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.53523700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.227719' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.534497' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.643687999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.529023' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.248924000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.527513' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.751519999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.52688499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.126882999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.52650599999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.813459999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.514741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.400841999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.506857' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.285977000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50515800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.165685000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50257399999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.262788' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50142600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.512343000000008' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.493388' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.749949999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.48010600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.211446000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.47312700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.184534999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.47198299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.953968000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.469847' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.247509000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.469161' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.415443000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.45971600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.265523000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.45535300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.945625' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.454718' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.801538000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44779100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.154299999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44743600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.223022' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44622600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.199151999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44321100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.252172000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44153000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.253079999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.43813200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.029812' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.414936' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.709387999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.413741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.560299999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.412949' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.211872999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.41101000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.139771000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.408812' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.252628000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.399929' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.958236000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.399558' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.648651000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.39628600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.293137999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.39451099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.574001000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.391603' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.067846000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.38895500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.537382000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37935400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.687570999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.375438' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.667803999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37486399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.548552000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37398899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.204422999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.373626' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.131390000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37070900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.801416000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37015900000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.743353999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.36772100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.639263999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.36202900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.308531000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35720600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.501207000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35566899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.416421999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35495400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.537663999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.354113' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.236119000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34939400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.455070000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.346385' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.630685' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34619000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.615293000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.344312' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.340873000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34398299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.739969000000009' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.343577' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.672491000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34277299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.493810000000011' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33434099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.611423000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.334183' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.577827999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33304600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.829439000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33204900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.605949000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33024199999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.904378999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.609999999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32861100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.602601' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32667600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.445709000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32430800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.149040999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.321673' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.634289000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32145700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.926870999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.321062' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.103797000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.320103' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.197192999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.315095' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.249811999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.31336800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.544110000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.313367' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.310006000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.31207099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.395276000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.308752' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.218170000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30655200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.792040999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30360400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.716244000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30341300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.61065' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30332400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.756486000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30251' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.488635000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30250700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.911921' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30228200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.448694000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30033' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.585338999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.29865700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.663770999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.297534' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.685290999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.296466' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.631708000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.288044' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.027479999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.287614' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.838740000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.28368500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.882069000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.28185600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.811678000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.276826' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.449725999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.275593' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.540550000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.27076099999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.205558000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.266685' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.308312999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26636700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.863478000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26536800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.133330999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26132099999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.390600999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.25564799999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.899424000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.25070100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.368138000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.249664' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.497442000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.24933' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.268259' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.24619300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.755504000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.23900999999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.981986999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.23458900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.626443000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.233951' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.462245000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.232691' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.207368000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.227947' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.565443000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.227707' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.943013999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.22111400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.097872000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.216415' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.305092999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.215501' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.476576000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.21210499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.792368000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.21000000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.979999999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20424800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.719278000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20316899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.619011' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.2016' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.447868999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20151499999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.843375999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20112899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.683101000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.197147' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.757790999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.196448' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.405610000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19615' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.894423000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19538100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.369695999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19515699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.988773000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19093400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.613702000000004' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.18899399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.678406000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.183961' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.510244999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.170798' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.184615000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.16842200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.614823999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.16684000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.053961999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.151342' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.560192000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.148214' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.292977999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.14805699999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.060301000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.14323100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.611666' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.13738600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.444808000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.132064' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Latitude:qk]' member='47.494833999999997' />
                      <groupfilter function='member' level='[none:Latitude:qk]' member='47.759381000000005' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.12399500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.674912999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.122018' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.678465000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.120008' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.522005999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.11736500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.609515000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.11667400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.363112000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.113613' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.947172000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.10812000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.838517000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.09738600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.139342999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.085999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.016305000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.08163999999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.837167999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.05752200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.749161000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.045974' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.106437999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.04520400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.194010000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.04272399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.623593999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.029605' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.939427999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.02816799999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.586173000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.02812000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.393554000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.024951' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.670285999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.014191' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.559120999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.010741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.506838000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.00902500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.320078000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.996098' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.007168' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.99141500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.199452000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.97315700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.419924999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.934596' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.52516700000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.92791' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.853585000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.91148700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.660868000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.91003699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.064880000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.90904900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.354933000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.876276' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.735748999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.84461600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.592151999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.819086' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.539931000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.788196' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.071567999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.67867499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.541611000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.668459' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.426482' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.61801199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.823354999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.56124699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.859677000000005' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.456405' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.208049000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.45041300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.736919' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.41229800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.419164000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.363416' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.596974000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.35214599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.671827' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.296503' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.532798' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.17580300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.235387000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.024277' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.236015000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.997348' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.257910000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.995724' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.222721000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.95314199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.046061999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.73040299999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.749932000000008' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.624151' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.457957' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.50508000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.532609000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.43120999999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.030410000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.41912900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.984332000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.37475599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.775320000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.33649899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.425145999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.254504' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.664207000000005' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.241485' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.454994999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.19938900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.32851800000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.19848300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.369368999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.15963600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.517120000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.12682100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.921509' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.09593900000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.22480800000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.092045' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.875079999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.08574299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.340879999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.085363' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.743792999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.06503299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.057918999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.98857099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.800570999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.953649' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.065696000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.83089099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.164101000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.80865000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.183996' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.79558399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.455025999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.75590999999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.651220000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.74978900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.557371000000003' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Latitude:qk]' />
                  <hierarchy name='[none:Longitude:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' filter-group='3' included-values='in-range'>
            <min>45.600000000000001</min>
            <max>48.990000000000002</max>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' included-values='in-range-or-null'>
            <min>-124.63522600000002</min>
            <max>-71.852050000000006</max>
          </filter>
          <computed-sort column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' direction='DESC' using='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' />
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' scope='cols' value='Count of EVs' />
            <format attr='height' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]' value='42' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]' value='68' />
            <format attr='height-header' value='33' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[__tableau_internal_object_id__].[cnt:Processed_EV_Data.csv_F87A0C089EAE4D0D8E90149097114363:qk]</cols>
      </table>
      <simple-id uuid='{CC19B9DB-17E2-4D5C-8F43-9F7F77D46248}' />
    </worksheet>
    <worksheet lock-quick-filters='true' name='Non-Densely Populated EVs'>
      <repository-location id='Non-DenselyPopulatedEVs' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <table>
        <view>
          <datasources>
            <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Make]' role='dimension' type='nominal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Latitude:ok]' />
              <groupfilter function='level-members' level='[none:Longitude:ok]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]'>
            <groupfilter function='level-members' level='[Make]' user:ui-action-filter='[Action3]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]' filter-group='4'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Latitude:qk]' />
                <groupfilter function='level-members' level='[none:Longitude:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.63522600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.908133999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.57241500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.300711999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.27164899999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.920242000000009' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.251122' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.060315000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.21924700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.379879000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.17945800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.195433000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.15735499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.981777999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.14524' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.231673999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11957' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.089627999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11782599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.141807' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.11010899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.883808000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-124.03407300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.439725000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.93950600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.067836' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.913191' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.321567000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.818061' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.986116000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.75384000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.096412999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.63846800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.32837' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.629486' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.860145000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.39631900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.038877999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.362968' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.075893999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.273642' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.048547999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.26252000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.857638999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.191985' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.438977000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.12715800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.548831' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.09921000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.225326000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.09286299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.056266999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.08430199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.544105999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.071989' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.334356' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.07174000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.701591000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.05652000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.989691999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.02094099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.967550000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-123.01417800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.436584000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.99919299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.620536000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.97996899999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.078240999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.97692499999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.069898999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.975404' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.712141000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.92939500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.583607999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.92494600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.657249' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.924277' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.318356999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.90082700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.035533999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.896991' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.501027999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88949100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.595272999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88848400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.435375999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.88817100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.589426000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.87404199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.998873000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.86836' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.085951000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.84982400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.828575000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.84676700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.367328000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.81801600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.080229000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.80363200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.641308000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.80237' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.024990000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.785612' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.980589999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.78187600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.089772000000004' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.77752599999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.325980000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.774081' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.267339' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.770534' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.202463999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.757743' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.029989' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.75117900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.002091999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.75' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.990000000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.727446' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.951762000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.72468200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.572710000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.71889299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.376283000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.714415' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.718487000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.706401' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.056010999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.70405600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.664240000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.69921200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.161124000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.69441' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.905057999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.680274' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.710887' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.67017000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.874730999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.668232' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.337215' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.66309299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.194533999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.65890100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.466777999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.65395300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.094653000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63841000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.310313000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63609099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.568769000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63579400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.630602000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.63339300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.748427' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62841800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.487079000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.627315' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.944130999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62465400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.246271' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.62320800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.590898000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.622766' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.699896000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.61515199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.863295000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.612932' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.300296000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.59945399999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.365819999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.596722' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.168908000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.59096099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.532192999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.58472900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.082881999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.57556899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.084890000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.57330399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.429299999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.569135' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.908810000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.56117100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.734394999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.558621' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.888348999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.55645' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.162343999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.539078' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.019041000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.537695' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.205342999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.53523700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.227719' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.534497' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.643687999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.529023' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.248924000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.527513' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.751519999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.52688499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.126882999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.52650599999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.813459999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.514741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.400841999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.506857' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.285977000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50515800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.165685000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50257399999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.262788' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.50142600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.512343000000008' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.493388' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.749949999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.48010600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.211446000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.47312700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.184534999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.47198299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.953968000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.469847' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.247509000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.469161' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.415443000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.45971600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.265523000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.45535300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.945625' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.454718' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.801538000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44779100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.154299999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44743600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.223022' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44622600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.199151999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44321100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.252172000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.44153000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.253079999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.43813200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.029812' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.414936' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.709387999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.413741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.560299999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.412949' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.211872999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.41101000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.139771000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.408812' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.252628000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.399929' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.958236000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.399558' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.648651000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.39628600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.293137999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.39451099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.574001000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.391603' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.067846000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.38895500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.537382000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37935400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.687570999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.375438' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.667803999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37486399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.548552000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37398899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.204422999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.373626' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.131390000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37070900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.801416000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.37015900000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.743353999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.36772100000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.639263999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.36202900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.308531000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35720600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.501207000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35566899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.416421999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.35495400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.537663999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.354113' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.236119000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34939400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.455070000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.346385' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.630685' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34619000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.615293000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.344312' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.340873000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34398299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.739969000000009' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.343577' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.672491000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.34277299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.493810000000011' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33434099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.611423000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.334183' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.577827999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33304600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.829439000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33204900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.605949000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33024199999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.904378999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.33' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.609999999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32861100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.602601' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32667600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.445709000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32430800000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.149040999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.321673' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.634289000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.32145700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.926870999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.321062' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.103797000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.320103' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.197192999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.315095' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.249811999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.31336800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.544110000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.313367' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.310006000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.31207099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.395276000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.308752' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.218170000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30655200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.792040999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30360400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.716244000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30341300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.61065' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30332400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.756486000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30251' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.488635000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30250700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.911921' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30228200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.448694000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.30033' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.585338999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.29865700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.663770999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.297534' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.685290999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.296466' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.631708000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.288044' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.027479999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.287614' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.838740000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.28368500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.882069000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.28185600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.811678000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.276826' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.449725999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.275593' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.540550000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.27076099999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.205558000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.266685' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.308312999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26636700000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.863478000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26536800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.133330999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.26132099999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.390600999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.25564799999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.899424000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.25070100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.368138000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.249664' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.497442000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.24933' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.268259' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.24619300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.755504000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.23900999999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.981986999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.23458900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.626443000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.233951' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.462245000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.232691' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.207368000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.227947' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.565443000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.227707' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.943013999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.22111400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.097872000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.216415' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.305092999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.215501' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.476576000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.21210499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.792368000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.21000000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.979999999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20424800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.719278000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20316899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.619011' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.2016' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.447868999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20151499999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.843375999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.20112899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.683101000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.197147' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.757790999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.196448' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.405610000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19615' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.894423000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19538100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.369695999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19515699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.988773000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.19093400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.613702000000004' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.18899399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.678406000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.183961' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.510244999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.170798' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.184615000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.16842200000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.614823999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.16684000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.053961999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.151342' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.560192000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.148214' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.292977999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.14805699999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.060301000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.14323100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.611666' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.13738600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.444808000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.132064' />
                    <groupfilter function='union'>
                      <groupfilter function='member' level='[none:Latitude:qk]' member='47.494833999999997' />
                      <groupfilter function='member' level='[none:Latitude:qk]' member='47.759381000000005' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.12399500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.674912999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.122018' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.678465000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.120008' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.522005999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.11736500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.609515000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.11667400000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.363112000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.113613' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.947172000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.10812000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.838517000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.09738600000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.139342999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.085999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.016305000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.08163999999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.837167999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.05752200000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.749161000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.045974' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.106437999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.04520400000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.194010000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.04272399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.623593999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.029605' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.939427999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.02816799999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.586173000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.02812000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.393554000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.024951' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.670285999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.014191' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.559120999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.010741' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.506838000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-122.00902500000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.320078000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.996098' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.007168' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.99141500000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.199452000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.97315700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.419924999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.934596' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.52516700000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.92791' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.853585000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.91148700000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.660868000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.91003699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.064880000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.90904900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.354933000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.876276' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.735748999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.84461600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.592151999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.819086' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.539931000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.788196' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.071567999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.67867499999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.541611000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.668459' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.426482' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.61801199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.823354999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.56124699999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.859677000000005' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.456405' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.208049000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.45041300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.736919' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.41229800000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.419164000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.363416' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.596974000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.35214599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.671827' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.296503' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.532798' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.17580300000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.235387000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-121.024277' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.236015000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.997348' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.257910000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.995724' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.222721000000007' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.95314199999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.046061999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.73040299999998' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.749932000000008' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.624151' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.457957' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.50508000000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.532609000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.43120999999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.030410000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.41912900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='46.984332000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.37475599999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.775320000000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.33649899999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.425145999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.254504' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.664207000000005' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.241485' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.454994999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.19938900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.32851800000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.19848300000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.369368999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.15963600000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.517120000000006' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.12682100000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.921509' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.09593900000002' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.22480800000001' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.092045' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.875079999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.08574299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.340879999999999' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.085363' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.743792999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-120.06503299999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.057918999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.98857099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.800570999999998' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.953649' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.065696000000003' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.83089099999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.164101000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.80865000000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.183996' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.79558399999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.455025999999997' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.75590999999999' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='47.651220000000002' />
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:Longitude:qk]' member='-119.74978900000001' />
                    <groupfilter function='member' level='[none:Latitude:qk]' member='48.557371000000003' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Latitude:qk]' />
                  <hierarchy name='[none:Longitude:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' filter-group='3' included-values='in-range'>
            <min>45.600000000000001</min>
            <max>48.990000000000002</max>
          </filter>
          <filter class='quantitative' column='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' included-values='all' />
          <slices>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Make)]</column>
            <column>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Action (Latitude,Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.51999998092651367' />
            <format attr='map-style' value='streets' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.84558010101318359' />
                <format attr='mark-color' value='#b07aa1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</rows>
        <cols>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</cols>
      </table>
      <simple-id uuid='{1F93107C-427D-40E3-98FE-44F83CC34150}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Washington EV Dashboard'>
      <repository-location id='WashingtonEVDashboard' path='/t/data301dashboards/workbooks/MichaelTurner_Lab10' revision='' site='data301dashboards' />
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Processed_EV_Data' name='federated.0v1oxw70uzidgy1b0s81o1nluhpp' />
      </datasources>
      <datasource-dependencies datasource='federated.0v1oxw70uzidgy1b0s81o1nluhpp'>
        <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
        <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
        <column-instance column='[Latitude]' derivation='None' name='[none:Latitude:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Longitude]' derivation='None' name='[none:Longitude:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='6' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98008' id='9' param='horz' w='98946' x='527' y='996'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98008' id='7' w='89584' x='527' y='996'>
              <zone h='37965' id='5' name='Distribution of EVs' w='44819' x='527' y='10708'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='37168' id='11' name='Count of EVs' w='44792' x='527' y='61836'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53143' id='14' name='Densely Populated EVs' w='22369' x='45346' y='996'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='53143' id='16' name='Non-Densely Populated EVs' w='22396' x='67715' y='996'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='9712' id='20' w='44819' x='527' y='996'>
                <formatted-text>
                  <run fontalignment='1' fontname='Montserrat SemiBold' fontsize='20'>Distribution of Electric Vehicles in the State of Washington</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39126' id='22' name='Make of EVs in Densely Populated Area' w='22396' x='45319' y='54139'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39126' id='23' name='Make of EVs in Non-Densely Populated Area' w='22396' x='67715' y='54139'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4138' id='25' w='44792' x='527' y='54139'>
                <formatted-text>
                  <run fontalignment='1' fontname='Montserrat SemiBold' fontsize='22'>Make of EVs in the State of Washington</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5466' id='27' w='44819' x='527' y='48673'>
                <formatted-text>
                  <run fontname='Montserrat Light'>The most densely populated area is located in the North-west of Washington</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5739' id='28' w='22396' x='45319' y='93265'>
                <formatted-text>
                  <run>Nissan, Audi, and Volkswagen are more popular in Densely Populated areas</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5739' id='29' w='22396' x='67715' y='93265'>
                <formatted-text>
                  <run>Chevrolet, Hyundai, Honda, and Chrysler are more popular in Non-Densely Populated areas</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3559' id='30' w='44792' x='527' y='58277'>
                <formatted-text>
                  <run>Tesla makes up the majority of EVs in Washington
</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' fixed-size='160' h='98008' id='31' is-fixed='true' w='9362' x='90111' y='996'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='53097' id='8' param='vert' w='9362' x='90111' y='996'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='10' name='Distribution of EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='15' name='Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='8629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='21' name='Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' values='database' w='9362' x='90111' y='16262'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8075' id='17' name='Non-Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='23895'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='44911' id='32' param='vert' w='9362' x='90111' y='54093'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8075' id='26' name='Non-Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]' values='database' w='9362' x='90111' y='54093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-style' value='dashed' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='8' />
            <format attr='background-color' value='#f5f1f0' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2500' minheight='2500' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='36' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98230' id='35' param='vert' w='99064' x='468' y='885'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='9712' id='20' w='44819' x='527' y='996'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Montserrat SemiBold' fontsize='20'>Distribution of Electric Vehicles in the State of Washington</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='15' name='Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='8629'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='21' name='Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' values='database' w='9362' x='90111' y='16262'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53143' id='14' is-fixed='true' name='Densely Populated EVs' w='22369' x='45346' y='996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8075' id='17' name='Non-Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='23895'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8075' id='26' mode='checkdropdown' name='Non-Densely Populated EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[Exclusions (Latitude,Longitude)]' values='database' w='9362' x='90111' y='54093'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53143' id='16' is-fixed='true' name='Non-Densely Populated EVs' w='22396' x='67715' y='996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='7633' id='10' name='Distribution of EVs' param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' w='9362' x='90111' y='996'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37965' id='5' is-fixed='true' name='Distribution of EVs' w='44819' x='527' y='10708'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5466' id='27' w='44819' x='527' y='48673'>
                  <formatted-text>
                    <run fontname='Montserrat Light'>The most densely populated area is located in the North-west of Washington</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='4138' id='25' w='44792' x='527' y='54139'>
                  <formatted-text>
                    <run fontalignment='1' fontname='Montserrat SemiBold' fontsize='22'>Make of EVs in the State of Washington</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39126' id='22' is-fixed='true' name='Make of EVs in Densely Populated Area' w='22396' x='45319' y='54139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39126' id='23' is-fixed='true' name='Make of EVs in Non-Densely Populated Area' w='22396' x='67715' y='54139'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3559' id='30' w='44792' x='527' y='58277'>
                  <formatted-text>
                    <run>Tesla makes up the majority of EVs in Washington
</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37168' id='11' is-fixed='true' name='Count of EVs' w='44792' x='527' y='61836'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5739' id='28' w='22396' x='45319' y='93265'>
                  <formatted-text>
                    <run>Nissan, Audi, and Volkswagen are more popular in Densely Populated areas</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='5739' id='29' w='22396' x='67715' y='93265'>
                  <formatted-text>
                    <run>Chevrolet, Hyundai, Honda, and Chrysler are more popular in Non-Densely Populated areas</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#b07aa1' />
                <format attr='border-style' value='dashed' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='8' />
                <format attr='background-color' value='#f5f1f0' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CA1FA4DC-0C03-4E31-9E32-097E8EA8D6A5}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Distribution of EVs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[:Measure Names]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Calculation_1449314708360740865:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:County:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:EV_Type:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EE792D54-4084-49C1-8966-47EE7E46F82C}' />
    </window>
    <window class='worksheet' name='Densely Populated EVs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[:Measure Names]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Calculation_1449314708360740865:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:County:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:EV_Type:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E9A5C542-B0DE-4A50-9F4D-C271971D66A1}' />
    </window>
    <window class='worksheet' name='Non-Densely Populated EVs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[:Measure Names]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Calculation_1449314708360740865:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:County:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:EV_Type:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Model:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{958BDFD9-F2B2-4F1E-B356-B7775FAE46FE}' />
    </window>
    <window class='worksheet' name='Count of EVs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2B74E86C-28B0-4187-BEC3-B2666015E2B7}' />
    </window>
    <window class='worksheet' name='Make of EVs in Densely Populated Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFF87D0F-852E-4DA3-8C79-5D668260173F}' />
    </window>
    <window class='worksheet' name='Make of EVs in Non-Densely Populated Area'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Latitude:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Longitude:qk]</field>
            <field>[federated.0v1oxw70uzidgy1b0s81o1nluhpp].[none:Make:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7AC9959C-3E88-4D2B-9BA1-B67DF80F23D8}' />
    </window>
    <window class='dashboard' maximized='true' name='Washington EV Dashboard'>
      <viewpoints>
        <viewpoint name='Count of EVs' />
        <viewpoint name='Densely Populated EVs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Distribution of EVs'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Make of EVs in Densely Populated Area' />
        <viewpoint name='Make of EVs in Non-Densely Populated Area' />
        <viewpoint name='Non-Densely Populated EVs'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BB6B77E7-875B-441C-A4E0-E7BE179A4987}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Washington EV Dashboard' width='192'>
      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
      kah0rUgAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
